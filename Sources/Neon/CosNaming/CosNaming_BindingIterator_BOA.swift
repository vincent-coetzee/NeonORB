//
// Generated by Coral
// Generated from IDLBOA
//

import Foundation

public class CosNaming_BindingIterator_BOA:BasicObjectAdaptor
    {
    public override var interfaceId:InterfaceId
        {
        return(InterfaceId("CosNaming::BindingIterator"))
        }

    public override func createInstance() -> CORBA_Object
        {
        return(CosNaming_BindingIterator_Implementation())
        }

    public override func respondsTo(operation:String) -> Bool
        {
        switch(operation)
            {
            
            
            case "next_n":
                return(true)
            
            case "destroy":
                return(true)
            
            case "next_one":
                return(true)
            
            default:
                break
            }
        return(super.respondsTo(operation:operation))
        }

    public override func invoke(operation:String,on:Implementation,outof unmarshaller:IIOPUnmarshaller,into marshaller:IIOPMarshaller) throws
        {
        let instance = on as! CosNaming_BindingIterator_Implementation
        switch(operation)
            {
            
            
            case "next_n":
                
                
                    
                    let how_many = unmarshaller.unmarshal(UInt32.self)
                    
                
                
                
                    
                        
                            var binding_list:CosNaming_BindingList!
                        
                    
                
                
                
                let invocation_result = try instance.next_n(how_many:how_many,binding_list:&binding_list)
                
                marshaller.marshal(CORBA.ResultKind.success)
                
                
                
                
                marshaller.marshal(binding_list)
                
                
                marshaller.marshal(invocation_result)
            
            case "destroy":
                
                
                let invocation_result:Void = try instance.destroy()
                
                marshaller.marshal(CORBA.ResultKind.success)
                
                marshaller.marshal(invocation_result)
            
            case "next_one":
                
                
                    
                        
                            var b:CosNaming_Binding!
                        
                    
                
                
                
                let invocation_result = try instance.next_one(b:&b)
                
                marshaller.marshal(CORBA.ResultKind.success)
                
                
                marshaller.marshal(b)
                
                
                marshaller.marshal(invocation_result)
            
        default:
            try super.invoke(operation:operation,on:on,outof:unmarshaller,into:marshaller)
            }
        }
    }
