//
// Generated by Coral
// Generated from IDLBOA
//

import Foundation

public class CORBA_ORB_BOA:BasicObjectAdaptor
    {
    public override var interfaceId:InterfaceId
        {
        return(InterfaceId("CORBA::ORB"))
        }

    public override func createInstance() -> CORBA_Object
        {
        return(CORBA_ORB_Implementation())
        }

    public override func respondsTo(operation:String) -> Bool
        {
        switch(operation)
            {
            
            
            case "destroy":
                return(true)
            
            case "create":
                return(true)
            
            default:
                break
            }
        return(super.respondsTo(operation:operation))
        }

    public override func invoke(operation:String,on:Implementation,outof unmarshaller:IIOPUnmarshaller,into marshaller:IIOPMarshaller) throws
        {
        let instance = on as! CORBA_ORB_Implementation
        switch(operation)
            {
            
            
            case "destroy":
                
                
                    
                    let object = unmarshaller.unmarshal(CORBA_Object.self)
                    
                
                
                
                let invocation_result = try instance.destroy(object:object)
                
                marshaller.marshal(CORBA.ResultKind.success)
                
                
                
                marshaller.marshal(invocation_result)
            
            case "create":
                
                
                    
                    let interfaceId = unmarshaller.unmarshal(String.self)
                    
                
                
                
                let invocation_result = try instance.create(interfaceId:interfaceId)
                
                marshaller.marshal(CORBA.ResultKind.success)
                
                
                
                marshaller.marshal(invocation_result)
            
        default:
            try super.invoke(operation:operation,on:on,outof:unmarshaller,into:marshaller)
            }
        }
    }
